version: "3.8"

services:
  db:
    image: postgres:12
    container_name: dtb.postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - "5433:5432"

  redis:
    image: redis:alpine
    container_name: dtb_redis

  web:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb.django
    restart: always
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:9000"
    ports:
      - "9000:9000"
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db

  bot:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb_bot
    restart: always
    command: python run_polling.py
    env_file:
      - ./.env
    depends_on:
      - web

  celery:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb.celery
    restart: always
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web

  celery-beat:
    build:
      context: .
      dockerfile: LocalDockerfile
    container_name: dtb.beat
    restart: always
    command: celery -A dtb beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

  llm-api:
    container_name: dtb.llm_api
    build:
      context: ./llm_api
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    volumes:
      - ./llm_api:/app
    env_file:
      - ./.env
    depends_on:
      - db
    hostname: dtb.llm-api

  langchain:
    container_name: dtb.langchain
    build:
      context: ./langchain_summ
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    hostname: dtb.langchain
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      - /root/.cache/huggingface

volumes:
  postgres_data:
